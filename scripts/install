#!/usr/bin/env node
'use strict'

const fs = require('fs')
const os = require('os')
const path = require('path')

const exec = require('./util/exec')

const GIT_SWITCH_PATH = path.join(os.homedir(), '.git-switch')
const TEMPLATES_PATH = path.join(GIT_SWITCH_PATH, 'git-templates')
const HOOKS_PATH = path.join(TEMPLATES_PATH, 'hooks')
const CONFIG_FILE = path.join(GIT_SWITCH_PATH, 'config.json')

console.log(`Creating git switch files...
~/.git-switch
  - git-templates
    - hooks
      - post-commit.git-switch
    - git-init
  - config.json
`)

if (!fs.existsSync(GIT_SWITCH_PATH)) {
  fs.mkdirSync(GIT_SWITCH_PATH)
}
if (!fs.existsSync(TEMPLATES_PATH)) {
  fs.mkdirSync(TEMPLATES_PATH)

  const readGitInit = fs.createReadStream(path.join(__dirname, 'git-init'), 'utf-8')
  const writeGitInit = fs.createWriteStream(path.join(TEMPLATES_PATH, 'git-init.git-switch'), 'utf-8')
  readGitInit.pipe(writeGitInit)
}
if (!fs.existsSync(HOOKS_PATH)) {
  fs.mkdirSync(HOOKS_PATH)

  const readPostCommit = fs.createReadStream(path.join(__dirname, 'post-commit'), 'utf-8')
  const writePostCommit = fs.createWriteStream(path.join(HOOKS_PATH, 'post-commit.git-switch'), 'utf-8')
  readPostCommit.pipe(writePostCommit)
}
if (!fs.existsSync(CONFIG_FILE)) {
  fs.writeFileSync(CONFIG_FILE, JSON.stringify({ users: [] }))
}

console.log('Done\n')

console.log(`Setting global config for git switch...
init.templatedir = ${TEMPLATES_PATH}
`)

exec('git config --global init.templatedir', { ignoreError: true })
  .then(val => {
    if (val) {
      console.error('Global init.templatedir already exists...')
      console.log(`This should be '${TEMPLATES_PATH}':`, val)
      console.log('')
      return
    }

    return exec(`git config --global init.templatedir ${TEMPLATES_PATH}`)
  })
  .then(_ => {
    console.log('Done\n')
  })
  .catch(err => {
    console.error('Failed to update global config', err)
    console.log('')
  })
